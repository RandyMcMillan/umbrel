name: Build OS image of current master

# Controls when the action will run.
on:
  pull_request:
    branches:       #[ master ]
      - '*'         # matches every branch that doesn't contain a '/'
      - '*/*'       # matches every branch containing a single '/'
      - '**'        # matches every branch
      - 'master'    # includes master
      - 'main'      # includes main
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    #paths:
    #  - '.github/workflows/automate.yml'
    #schedule:
    #  - cron: "*/5 * * * *"
    branches:       #[ master ]
      - '*'         # matches every branch that doesn't contain a '/'
      - '*/*'       # matches every branch containing a single '/'
      - '**'        # matches every branch
      - 'master'    # includes master
      - 'main'      # includes main

jobs:

  github-workspace:
    name: github-workspace
    runs-on: ubuntu-20.04
    steps:
      - name: Print github workspace
        run: |
          printenv

  build:

    runs-on: ubuntu-20.04

    steps:
    - name: Run apt update
      run: sudo apt update

    - name: Install dependencies
      run: sudo apt -y install quilt qemu-user-static debootstrap libarchive-tools jq

    - name: Nuke current Docker installation
      run: |
        sudo systemctl stop docker
        sudo apt-get purge docker-ce docker-ce-cli containerd.io moby-engine moby-cli
        sudo rm -rf /var/lib/docker
    - name: Re-install Docker
      run: |
        curl -fsSL https://get.docker.com -o get-docker.sh
        sudo sh get-docker.sh
        docker --version
    - name: Enable experimental features in Docker
      run: |
        sudo rm -rf /etc/docker/daemon.json
        echo '{"experimental": true}' | sudo tee -a /etc/docker/daemon.json
        sudo systemctl restart docker
    - name: Download Umbrel OS build scripts
      run: |
        git clone git://github.com/RandyMcMillan/umbrel-os.git
    - name: Setting env vars
      run: |
        UMBREL_OS_VERSION="dev"
        IMAGE_NAME="umbrel-playground"
        UMBREL_REPO="https://github.com/RandyMcMillan/umbrel.git"
        UMBREL_BRANCH="umbrel-playground"
        echo "UMBREL_OS_VERSION=$UMBREL_OS_VERSION" >> $GITHUB_ENV
        echo "IMAGE_NAME=$IMAGE_NAME">> $GITHUB_ENV
        echo "UMBREL_REPO=$UMBREL_REPO">> $GITHUB_ENV
        echo "UMBREL_BRANCH=$UMBREL_BRANCH" >> $GITHUB_ENV
        printenv
              
    - name: Build Umbrel OS
      run: |
        pushd $GITHUB_WORKSPACE && git submodule update --init && popd
        pushd $GITHUB_WORKSPACE/apps/plebnet-playground && python3 plebnet_generate.py  TRIPLET=aarch64-linux-gnu && popd
        cd umbrel-os
        echo "Building $IMAGE_NAME"
        sudo IMG_FILENAME=$IMAGE_NAME ZIP_FILENAME=$IMAGE_NAME UMBREL_OS_VERSION=$UMBREL_OS_VERSION UMBREL_REPO=$UMBREL_REPO UMBREL_BRANCH=$UMBREL_BRANCH ./build.sh
        cd ..
        
    - name: Copy ZIP to current working dir
      run: cp umbrel-os/deploy/*.zip ./

    - name: Uploading artifacts
      uses: actions/upload-artifact@v2
      with:
        path: ${{ env.IMAGE_NAME }}.zip
        name: ${{ env.IMAGE_NAME }}.zip
